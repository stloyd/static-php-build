name: Build Library Dependency Artifacts

on:
    release:
        types:
            - published
    workflow_dispatch:

jobs:
    build-release-artifacts:
        name: "Build Library Dependency Artifacts"
        runs-on: ${{ matrix.operating-system }}
        strategy:
            fail-fast: false
            matrix:
                php-version:
                    - "8.1"
                operating-system:
                    - "ubuntu-latest"
                    - "macos-latest"
                library:
                    # Commented out libraries are not yet supported
#                    - brotli
#                    - bzip2
                    - curl
#                    - freetype
                    #- glfw
#                    - gmp
#                    - icu
                    - imagemagick
#                    - libavif
#                    - libevent
#                    #- libffi
#                    - libiconv
#                    - libjpeg
#                    #- libmcrypt
#                    #- libmemcached
#                    - libpng
#                    - libsodium
#                    - libssh2
#                    - libwebp
#                    - libxml2
#                    - libxslt
#                    - libyaml
#                    - libzip
#                    - mcrypt
#                    - ncurses
#                    - nghttp2
#                    - onig
#                    - openssl
#                    #- pkg-config
#                    - postgresql
#                    #- pthreads4w
#                    - readline
#                    - snappy
#                    - sqlite
#                    - xz
#                    - zlib
#                    - zstd

        steps:
            - name: "Checkout"
              uses: "actions/checkout@v4"

            - name: "Install PHP"
              uses: "shivammathur/setup-php@v2"
              with:
                  coverage: none
                  tools: none
                  php-version: "${{ matrix.php-version }}"
                  ini-values: memory_limit=-1

            - name: Download SPC bin artifact
              id: download-spc-artifact
              uses: dawidd6/action-download-artifact@v2
              with:
                  github_token: ${{secrets.GITHUB_TOKEN}}
                  branch: main
                  workflow: release-build.yml

            - name: Validate SPC bin
              run: "./spc --help"

            # Cache downloaded source
            - name: OS type
              id: os-type
              run: |
                  OS=""
                  if [ "${{ matrix.operating-system }}" = "ubuntu-latest" ]; then
                      OS="linux-x86_64"
                  elif [ "${{ matrix.operating-system }}" = "macos-latest" ]; then
                      OS="macos-x86_64"
                  fi
                  echo "OS=$OS" >> $GITHUB_ENV

            - name: Download source artifacts
              id: download-source-artifact
              uses: dawidd6/action-download-artifact@v2
              with:
                  github_token: ${{secrets.GITHUB_TOKEN}}
                  branch: main
                  workflow: download-cache.yml
                  path: "download/"

            - name: "Build library: ${{ matrix.library }}"
              run: |
                  SPC_USE_SUDO=yes ./spc doctor --auto-fix
                  ./spc build:libs ${{ matrix.library }} --include-suggested

            - name: "Upload Artifact"
              uses: actions/upload-artifact@v3
              with:
                  name: php-${{ matrix.php-version }}-${{ matrix.library }}-${{ env.OS }}
                  path: |
                      buildroot/include/
                      buildroot/lib/
                  if-no-files-found: error
